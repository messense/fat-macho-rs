name: Python

on:
  push:
  pull_request:

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Build Wheels - Linux
      if: startsWith(matrix.os, 'ubuntu')
      env:
        PYTHON_VERSION: python${{ matrix.python-version }}
      run: |
        docker build -t maturin:latest -f python/Dockerfile .
        docker run --rm -v $(pwd):/io maturin:latest sh -c "source ~/.cargo/env && maturin build -i $PYTHON_VERSION --release --out dist -m python/Cargo.toml"

    - name: Build Wheels - Non-Linux
      if: startsWith(matrix.os, 'windows') || startsWith(matrix.os, 'macos')
      run: |
        pip install maturin
        maturin build -i python --release --out dist -m python/Cargo.toml

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

    - name: Publish package - Non-Linux
      if: startsWith(github.ref, 'refs/tags/') && (startsWith(matrix.os, 'windows') || startsWith(matrix.os, 'macos'))
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: |
          pip install twine
          twine upload --skip-existing dist/*

    - name: Publish package - Linux
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
        skip_existing: true
